include:
  - project: nse/ci
    file:
      - /ci/lib/tox-bb5.yml
      - /ci/jobs/build-package.yml
      - /ci/jobs/build-wheels.yml
      - /ci/jobs/publish-package.yml
      - /ci/jobs/docs.yml
      - /ci/jobs/publish-docs.yml
  - project: hpc/gitlab-pipelines
    file: spack-build-components.gitlab-ci.yml

workflow:
  rules:
    # Rules taken from official docs to avoid duplicated pipelines
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'


variables:
  bb5_partition: prod_small


spack_setup:
  stage: .pre
  extends: .spack_setup


test-cpp-unit:
  stage: test
  needs: []
  tags:
    - bb5_map
  variables:
    bb5_constraint: cpu
    bb5_ntasks: 4
    bb5_cpus_per_task: 1
    SLURM_OVERLAP: 1

  script:
    - module load unstable cmake gcc boost hpe-mpi
    - cmake -S . -B build
    - cmake --build build -j2
    - cd build && ctest --output-on-failure

test-examples:
  stage: test
  needs: []
  tags:
    - bb5_map
  variables:
    bb5_constraint: cpu
    bb5_ntasks: 5
    bb5_cpus_per_task: 1
    SLURM_OVERLAP: 1
    DATADIR: /gpfs/bbp.cscs.ch/project/proj12/spatial_index/v4

  script:
    - module load unstable cmake gcc boost hpe-mpi py-mpi4py
    - python -m venv venv
    - source venv/bin/activate
    - pip install ipython jupyter pytest pytest-mpi
    - pip install -e .
    - bash .ci/run_mpi_pytest.sh
    - bash .ci/_run_examples.sh


test-bare-ubuntu:
  stage: test
  needs: []
  tags: [kubernetes]
  image: bbpgitlab.epfl.ch:5050/hpc/spatial-index/ubuntu_20.04_devel
  variables:
    KUBERNETES_MEMORY_LIMIT: 5Gi    # memory overrides
    KUBERNETES_MEMORY_REQUEST: 4Gi  # memory overrides
    PIP_PACKAGES: pytest pytest-mpi
  before_script:
    - !reference [.define-functions]
    # Needed for `.setup-venv`.
    - ln -s /usr/bin/python3 /usr/bin/python
    - !reference [.setup-venv]
  script:
    - apt-get update
    - apt install -y libopenmpi-dev
    - apt install -y wget
    - scripts/install_boost.sh
    - pip install -v -e .
    - pytest


test-spack:
  stage: test
  needs: ["spack_setup"]
  tags:
    - bb5_map
  variables:
    PIP_PACKAGES: pytest pytest-mpi
  before_script:
    - !reference [.bb5, clean-env]
    - !reference [.define-functions]
  script:
    - source $SPACK_ROOT/share/spack/setup-env.sh
    - module load unstable git py-bluepy
    - spack dev-build spatial-index@develop
    - !reference [.bb5, load-python-39]
    - !reference [.setup-venv]
    - spack load --first spatial-index@develop  # quick fix since spack installation doesn't clean up properly between pipeline runs
    - mv spatial_index _dont_interfere
    - pytest


test-bb5-py39:
  extends: .tox-template
  needs: []
  variables:
    TOXENV: flake8, py39  # boost depends on py38
    PRE_BUILD_COMMAND: |
      module load unstable boost hpe-mpi py-bluepy
    EXTRA_MODULES:
      unstable:gcc


test-bb5-mpi-compat-hpe:
  extends: .tox-template
  variables:
    TOXENV: mpi-compat
    EXTRA_MODULES:
      unstable:gcc
      unstable:boost
      unstable:hpe-mpi
      unstable:py-mpi4py


test-bb5-mpi-compat-mvapich2:
  extends: .tox-template
  variables:
    TOXENV: mpi-compat
    EXTRA_MODULES:
      unstable:gcc
      unstable:boost
      unstable:mvapich2
      unstable:py-mpi4py


# The following stages are overrides. Dont rename
# Always add the manual option to create sdist/wheel or upload
build-package:
  needs: []
  tags: []
  rules:
    - when: always

build-wheels:
  tags: [kubernetes]
  image: bbpgitlab.epfl.ch:5050/hpc/spatial-index/manylinux2014_boost_x86_64:boost-179
  variables:
    KUBERNETES_MEMORY_LIMIT: 5Gi    # memory overrides
    KUBERNETES_MEMORY_REQUEST: 4Gi  # memory overrides
    TEST_RUN_TOX: "false"  # MVDtool doesnt have wheels
    SI_MPI: "Off"
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
    - if: $CI_COMMIT_TAG
    - when: manual
      allow_failure: true

publish-package:
  tags: []
  needs: ["build-package", "build-wheels"]
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual
      allow_failure: true

docs:
  needs: []
  variables:
    TOXENV: docs
    PRE_BUILD_COMMAND: |
      module load unstable boost hpe-mpi
    EXTRA_MODULES:
      unstable:gcc
  artifacts:
    paths:
      - "${PYTHON_PROJECT_DIR-.}/docs/_build/"

publish-docs:
  tags: []
  needs: ["docs"]
  variables:
    SYS_PACKAGES: openssh-clients
    PIP_PACKAGES: docs_internal_upload
  script:
    - docs-internal-upload --docs-path docs/_build
  rules:
    - if: $CI_COMMIT_TAG
    - when: manual
      allow_failure: true
