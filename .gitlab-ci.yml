include:
  - project: nse/ci
    file: /ci/lib/tox-bb5.yml
  - project: nse/ci
    file: /ci/jobs/build-package.yml
  - project: nse/ci
    file: /ci/jobs/build-wheels.yml
  - project: nse/ci
    file: /ci/jobs/publish-package.yml

test-cpp-unit:
  stage: test
  tags:
    - bb5_map
  variables:
    EXTRA_MODULES:
      unstable:cmake
      unstable:gcc
      unstable:boost/1.70.0
  before_script:
    - !reference [.bb5, clean-env]
    - !reference [.bb5, load-extra-modules]
  script:
    - cmake -S . -B build
    - cmake --build build -j2
    - cd build && ctest -E Python

test-spack:
  stage: test
  tags:
    - bb5_map
  before_script:
    - !reference [.bb5, clean-env]
  script:
    - module load unstable git
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@bbpgitlab.epfl.ch".insteadOf git@bbpgitlab.epfl.ch
    - bash scripts/ci_spack_test.sh

test-py37:
  extends: .tox-template
  variables:
    TOXENV: flake8, py37
    EXTRA_MODULES:
      unstable:cmake
      unstable:gcc
      unstable:boost/1.70.0

# The following stages are overrides. Dont rename
# Always add the manual option to create sdist/wheel or upload
build-package:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
    - when: manual
      allow_failure: true

build-wheels:
  tags: [kubernetes]
  variables:
    KUBERNETES_MEMORY_LIMIT: 5Gi    # memory overrides
    KUBERNETES_MEMORY_REQUEST: 4Gi  # memory overrides
    SYS_PACKAGES: boost169-devel
    PRE_BUILD_COMMAND: free;
      export BOOST_INCLUDEDIR="/usr/include/boost169";
      export BOOST_LIBRARYDIR="/usr/lib64/boost169"
    TEST_RUN_TOX: "false"  # MVDtool doesnt have wheels
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
    - when: manual
      allow_failure: true

publish-package:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
    - when: manual
      allow_failure: true
